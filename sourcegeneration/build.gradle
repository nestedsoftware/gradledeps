/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    annotationProcessor 'com.generators:interfacegenerator:0.0.1'
    compileOnly 'com.generators:interfacegenerator:0.0.1'
}

compileJava {
//    dependsOn("generateSources")
//    options.compilerArgs += '-proc:none'
}

task generateSources(type: JavaCompile) {
//    source = sourceSets.main.java.srcDirs
//    classpath = sourceSets.main.compileClasspath
//    destinationDir = file("$buildDir")
//    options.compilerArgs = ['-proc:only', '-processor', 'generators.GenerateInterfaceProcessor']
//    options.annoationProcessorPath = configurations.annotationProcessor
//    options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources")
}


abstract class IncrementalReverseTask extends DefaultTask {
    @Incremental
    @PathSensitive(PathSensitivity.NAME_ONLY)
    @InputFiles
    abstract ConfigurableFileCollection  getInputFiles()

    @OutputDirectory
    abstract DirectoryProperty getOutputDir()

    @Input
    abstract Property<String> getInputProperty()

    @TaskAction
    void execute(InputChanges inputChanges) {
        println(inputChanges.incremental
                ? 'Executing incrementally'
                : 'Executing non-incrementally'
        )

        inputChanges.getFileChanges(inputFiles).each { change ->
            if (change.fileType == FileType.DIRECTORY) return

            println "${change.changeType}: ${change.normalizedPath}"
            def targetFile = outputDir.file(change.normalizedPath).get().asFile
            if (change.changeType == ChangeType.REMOVED) {
                targetFile.delete()
            } else {
                targetFile.text = change.file.text.reverse()
            }
        }
    }
}

task incrementalReverse(type: IncrementalReverseTask) {
    inputFiles.from(fileTree(dir: 'inputs', include: '*.txt'))
    outputDir = file("$buildDir/outputs")
    inputProperty = project.properties['taskInputProperty'] ?: 'original'
}
